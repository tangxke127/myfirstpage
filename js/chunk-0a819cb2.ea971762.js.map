{"version":3,"sources":["webpack:///./src/views/mapstatic/index.vue?4f8a","webpack:///./src/views/mapstatic/index.vue","webpack:///src/views/mapstatic/index.vue","webpack:///./src/views/mapstatic/index.vue?995b","webpack:///./src/views/mapstatic/index.vue?67bc"],"names":["render","_vm","this","_c","_self","staticClass","_v","ref","staticStyle","attrs","staticRenderFns","data","myChart","centerObj","center","layoutCenter","layoutSize","mounted","methods","getChinaJson","console","renderChinaChart","chinaMap","echarts","formatOption","opt","title","text","series","type","map","showLegendSymbol","label","distance","fontFamily","fontSize","fontWeight","normal","show","textStyle","color","itemStyle","areaColor","borderColor","emphasis","select","roam","animation","zoom","markPoint","symbol","symbolSize","silent","component"],"mappings":"gHAAA,W,yCCAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,UAAU,CAACJ,EAAIK,GAAG,YAAYH,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACI,IAAI,WAAWF,YAAY,WAAWG,YAAY,CAAC,OAAS,QAAQC,MAAM,CAAC,GAAK,mBAE1QC,EAAkB,G,YCWP,G,UAAA,CACfC,KADA,WAEA,OACAC,aACAC,WACAC,uCAEAC,2BACAC,gBAEAF,cAGAG,QAbA,WAcA,qBAEAC,SACAC,aADA,WACA,WACA,kEACAC,yBACA,kCAGAC,iBAPA,SAOAC,GACAF,0BACA,4DACAG,4BACA,iCACA,8BAeAC,aA3BA,SA2BAC,GAEA,OACAC,OACAC,aA4CAC,QACA,CACAC,WAEAC,MAEAhB,mBAIAiB,oBAEAC,OAEAC,WACAC,+BACAC,YACAC,eACAC,QACAC,QACAC,WACAC,kCAUAC,WACAC,4BACAC,+BAEAC,UACAZ,OACAM,QACAJ,gCAEAO,WACAC,8BACAF,eAIAK,QACAb,OACAM,QACAE,cAEAC,WACAC,8BACAF,eAIAxB,eACA8B,QACAC,aACAC,SACArC,QACAsC,WACAC,qCACAC,mBACAC,UACApB,OACAM,SAEA3B,YAKA,aClL8V,I,wBCQ1V0C,EAAY,eACd,EACArD,EACAU,GACA,EACA,KACA,WACA,MAIa,aAAA2C,E","file":"js/chunk-0a819cb2.ea971762.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=2bc0238d&prod&lang=less&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"all\"},[_c('div',{staticClass:\"header\"},[_vm._v(\"静态地图展示\")]),_c('div',{staticClass:\"body\"},[_c('div',{ref:\"mapchart\",staticClass:\"mapChart\",staticStyle:{\"height\":\"100%\"},attrs:{\"id\":\"mapchart\"}})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"all\">\r\n        <div class=\"header\">静态地图展示</div>\r\n        <div class=\"body\">\r\n            <div id=\"mapchart\" ref=\"mapchart\" style=\"height:100%\" class=\"mapChart\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport chinaData from \"./map/china.json\";\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            myChart: null,\r\n            centerObj: {\r\n                center: [28.71484375, 39.39516718887485],\r\n                // center: null,\r\n                layoutCenter: ['50%','50%'],\r\n                layoutSize: 180\r\n            },\r\n            center:null,\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getChinaJson()\r\n    },\r\n    methods:{\r\n        getChinaJson(){\r\n            import('./map/china.json').then(geoJson => {\r\n                console.log('geoJson',geoJson)\r\n                this.renderChinaChart(geoJson.default)\r\n            })\r\n        },\r\n        renderChinaChart(chinaMap){\r\n            console.log('chinamap',chinaMap)\r\n            this.myChart = echarts.init(document.getElementById('mapchart'))\r\n            echarts.registerMap('china', chinaMap);\r\n            let optionmap = this.formatOption('china')\r\n            this.myChart.setOption(optionmap,true)\r\n            // this.myChart.on('click',function(params){\r\n            //     let center = [28.71484375, 39.39516718887485]\r\n            //     let event = params.event\r\n            //     // let center = [event.offsetX,event.offsetY]\r\n            //     let offsetX = params.event.offsetX;\r\n            //     let offsetY = params.event.offsetY;\r\n            //     // console.log(this.myChart.getOption().series)\r\n            //     // let zuobiao = this.myChart.convertFromPixel('series', [offsetX, offsetY]); // 转换成坐标\r\n\r\n            //     // let zuobiao = this.myChart.convertFromPixel('geo', center); // 转换成坐标\r\n            //     this.center = center\r\n            //     // console.log('params',zuobiao)\r\n            // })\r\n        },\r\n        formatOption(opt){\r\n            // let that = this\r\n            let option = {\r\n                title:{\r\n                    text:'中国地图'\r\n                },\r\n                // geo:{\r\n                //     type:'map',\r\n                //     map:opt,\r\n                //     // roam:true,\r\n                //     aspectScale: 0.75, //长宽比\r\n                //     //zoom: 1.1, //当前视角的缩放比例\r\n                //     roam: true, //是否开启鼠标缩放和平移漫游。默认不开启。如果只想要开启缩放或者平移，可以设置成 'scale' 或者 'move'。设置成 true 为都开启\r\n                //     zoom: 0.9,\r\n                //     showLegendSymbol: false,\r\n                //     layoutCenter: [\"50%\", \"48%\"],\r\n                //     layoutSize: \"112%\",\r\n                //     label: {\r\n                //         emphasis: {\r\n                //             show: false\r\n                //         }\r\n                //     },\r\n                //     roam: true,\r\n                //     itemStyle: {\r\n                //         normal: {\r\n                //             areaColor: '#323c48',\r\n                //             borderColor: '#111'\r\n                //         },\r\n                //         emphasis: {\r\n                //             areaColor: '#2a333d'\r\n                //         }\r\n                //     },\r\n                //     itemStyle: {\r\n                //         normal: {\r\n                //         areaColor: \"rgba(18,35,92,0.1)\",\r\n                //         borderWidth: 1,\r\n                //         borderColor: \"#0a53e9\", //线\r\n                //         shadowColor: \"#092f8f\", //外发光\r\n                //         shadowBlur: 20,\r\n                //         },\r\n                //         emphasis: {\r\n                //         areaColor: \"#0a2dae\", //悬浮区背景\r\n                //         textStyle: {\r\n                //             color: \"#FFFFFF\",\r\n                //         },\r\n                //         },\r\n                //     },\r\n                // },\r\n                series: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'map',\r\n\t\t\t\t\t\t// mapType: opt,\r\n\t\t\t\t\t\tmap: opt,\r\n\r\n                        center:this.center,\r\n                        // layoutCenter:['50%', '50%'],\r\n                        // layoutSize:180,\r\n\r\n\t\t\t\t\t\tshowLegendSymbol: false, // 在图例相应区域显示图例的颜色标识（系列标识的小圆点），存在 legend 组件时生效。\r\n                        // aspectScale:scale,\r\n                        label: {\r\n                                    // show:true,\r\n                            distance:5, //距离图形元素的距离\r\n                            fontFamily:'PingFangSC-Medium', //文字字体系列\r\n                            fontSize:14,\r\n                            fontWeight:300,\r\n                            normal: {\r\n                                show: true, //是否显示标签\r\n                                    textStyle: {\r\n                                        color: 'rgba(255,255,255,0.65)'\r\n                                    },\r\n                            },\r\n                            // emphasis: { //高亮状态下的多边形和标签样式\r\n                            //     textStyle: {\r\n                            //         color: '#fff'\r\n                            //     },\r\n                            //     areaColor:'#D04F27' //地图区域的颜色\r\n                            // }\r\n                        },\r\n                        itemStyle:{ //静态默认展示时样式\r\n                            areaColor:'rgba(1,29,66,1)', //地图区域颜色\r\n                            borderColor:'rgb(75,170,250)', //图形的描边颜色\r\n                        },\r\n                        emphasis:{ //鼠标hover时展示样式\r\n                            label:{\r\n                                show:false, //是否显示标签\r\n                                fontFamily:'PingFangSC-Medium',\r\n                            },\r\n                            itemStyle:{\r\n                                areaColor:'rgb(26, 154, 248)',\r\n                                color: '#fff'\r\n                            },\r\n\r\n                        },\r\n                        select:{ //点击时高亮样式\r\n                            label:{ \r\n                                show: true, //是否显示标签\r\n                                color: '#fff'\r\n                            },\r\n                            itemStyle:{\r\n                                areaColor:'rgb(26, 154, 248)', //地图区域颜色\r\n                                color: '#fff' //图形颜色\r\n                            }, \r\n\r\n                        },\r\n                        layoutSize: 700, //地图大小\r\n                        roam: true, //是否开启鼠标缩放和平移漫游\r\n                        animation: false, //是否开启动画\r\n                        zoom:1.2, //当前视角的缩放比例\r\n                        data: [],\r\n                        markPoint: { //图表标注\r\n                            symbol: \"image://\" + this.markPointIcon, //标记的图形\r\n                            symbolSize: [60, 60], //标记大小\r\n                            silent: true, //图形是否不响应和茶法鼠标事件\r\n                            label: {\r\n                                show: false\r\n                            },\r\n                            data: []\r\n                        }\r\n\t\t\t\t    }\r\n\t\t\t\t]\r\n            }\r\n            return option\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n<style lang=\"less\" scoped>\r\n    .all{\r\n\t\tmargin:10px;\r\n\t\t.header{\r\n\t\t\tmargin: 15px 0;\r\n\t\t\tpadding: 15px 30px;\r\n\t\t\tbackground: #fff;\r\n\t\t\tfont-family: PingFangSC-Medium;\r\n\t\t\tfont-size: 20px;\r\n\t\t\tcolor: #17233d;\r\n\t\t\tletter-spacing: 0;\r\n\t\t\tfont-weight: 500;\r\n\t\t\tborder: 1px solid #e8eaec;\r\n\t\t}\r\n\t\t.body{\r\n\t\t\tbackground: white;\r\n\t\t\tborder: 1px solid #e8eaec;\r\n\t\t\t// height: calc(100% - 50px);\r\n            // line-height: 100%;\r\n            text-align: center;\r\n            padding:20px;\r\n            height: 800px;\r\n            width: 100%;\r\n        }\r\n    }\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2bc0238d&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=2bc0238d&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2bc0238d\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}