{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_add.vue?f4e5","webpack:///./node_modules/core-js/modules/_array-species-constructor.js","webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_add.vue","webpack:///node_modules/biyi-dic/src/pages/cscp_dic_add.vue","webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_add.vue?bfc6","webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_add.vue?0d84"],"names":["ctx","IObject","toObject","toLength","asc","module","exports","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","val","res","O","self","f","length","index","result","undefined","push","$export","$find","KEY","forced","Array","P","F","find","this","arguments","speciesConstructor","original","isObject","isArray","SPECIES","C","constructor","prototype","render","_vm","_c","_self","attrs","slot","_v","ref","formDicType","ruleValidate","staticStyle","model","value","dicType","callback","$$v","$set","expression","dicTypeName","showName","nativeOn","$event","showOrHideTree","apply","directives","name","rawName","showTree","staticClass","on","treeShowToggle","treeData","changeCheck","handleCreateOrEditItem","column","dicData","handleSubmit","handleReset","title","show","formDic","formDicRule","dicDisplay","dicOrder","dicIcon","dicSubmit","dicCancel","staticRenderFns","data","checkData","dicValue","dicArr","formStatus","key","width","h","props","type","size","click","style","backgroundColor","height","display","verticalAlign","margin","confirm","transfer","placement","dicParentId","min","required","trigger","max","message","validator","computed","methods","initTree","Util","setTreeNode","marginRight","JSON","item","post","then","catch","console","initDicList","deleteDic","mounted","activated","component"],"mappings":"qGAOA,IAAIA,EAAM,EAAQ,QACdC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAM,EAAQ,QAClBC,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAiB,GAARF,EACTG,EAAoB,GAARH,EACZI,EAAkB,GAARJ,EACVK,EAAmB,GAARL,EACXM,EAAwB,GAARN,EAChBO,EAAmB,GAARP,GAAaM,EACxBE,EAASP,GAAWJ,EACxB,OAAO,SAAUY,EAAOC,EAAYC,GAQlC,IAPA,IAMIC,EAAKC,EANLC,EAAInB,EAASc,GACbM,EAAOrB,EAAQoB,GACfE,EAAIvB,EAAIiB,EAAYC,EAAM,GAC1BM,EAASrB,EAASmB,EAAKE,QACvBC,EAAQ,EACRC,EAASjB,EAASM,EAAOC,EAAOQ,GAAUd,EAAYK,EAAOC,EAAO,QAAKW,EAEvEH,EAASC,EAAOA,IAAS,IAAIX,GAAYW,KAASH,KACtDH,EAAMG,EAAKG,GACXL,EAAMG,EAAEJ,EAAKM,EAAOJ,GAChBd,GACF,GAAIE,EAAQiB,EAAOD,GAASL,OACvB,GAAIA,EAAK,OAAQb,GACpB,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAOY,EACf,KAAK,EAAG,OAAOM,EACf,KAAK,EAAGC,EAAOE,KAAKT,QACf,GAAIP,EAAU,OAAO,EAGhC,OAAOC,GAAiB,EAAIF,GAAWC,EAAWA,EAAWc,K,2DCvCjE,IAAIG,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,OAAR,CAA4B,GACpCC,EAAM,OACNC,GAAS,EAETD,IAAO,IAAIE,MAAM,GAAGF,IAAK,WAAcC,GAAS,KACpDH,EAAQA,EAAQK,EAAIL,EAAQM,EAAIH,EAAQ,QAAS,CAC/CI,KAAM,SAAcnB,GAClB,OAAOa,EAAMO,KAAMpB,EAAYqB,UAAUd,OAAS,EAAIc,UAAU,QAAKX,MAGzE,EAAQ,OAAR,CAAiCI,I,qBCZjC,IAAIQ,EAAqB,EAAQ,QAEjClC,EAAOC,QAAU,SAAUkC,EAAUhB,GACnC,OAAO,IAAKe,EAAmBC,GAAxB,CAAmChB,K,kCCJ5C,W,qBCAA,IAAIiB,EAAW,EAAQ,QACnBC,EAAU,EAAQ,QAClBC,EAAU,EAAQ,OAAR,CAAkB,WAEhCtC,EAAOC,QAAU,SAAUkC,GACzB,IAAII,EASF,OAREF,EAAQF,KACVI,EAAIJ,EAASK,YAEG,mBAALD,GAAoBA,IAAMX,QAASS,EAAQE,EAAEE,aAAaF,OAAIjB,GACrEc,EAASG,KACXA,EAAIA,EAAED,GACI,OAANC,IAAYA,OAAIjB,UAETA,IAANiB,EAAkBX,MAAQW,I,yCCdrC,IAAIG,EAAS,WAAkB,IAAIC,EAAIX,KAAKY,EAAGD,EAAIE,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAACA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,SAASC,KAAK,SAAS,CAACJ,EAAIK,GAAG,UAAUJ,EAAG,OAAO,CAACK,IAAI,cAAcH,MAAM,CAAC,MAAQH,EAAIO,YAAY,MAAQP,EAAIQ,aAAa,cAAc,MAAM,CAACP,EAAG,MAAM,CAACE,MAAM,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,iBAAiB,CAACF,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,OAAO,KAAO,YAAY,CAACF,EAAG,MAAM,CAACA,EAAG,cAAc,CAACQ,YAAY,CAAC,MAAQ,OAAON,MAAM,CAAC,YAAc,WAAWO,MAAM,CAACC,MAAOX,EAAIO,YAAYK,QAASC,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIO,YAAa,UAAWO,IAAME,WAAW,0BAA0B,MAAM,GAAGf,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,OAAO,KAAO,gBAAgB,CAACF,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACQ,YAAY,CAAC,MAAQ,OAAON,MAAM,CAAC,YAAc,WAAWO,MAAM,CAACC,MAAOX,EAAIO,YAAYU,YAAaJ,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIO,YAAa,cAAeO,IAAME,WAAW,8BAA8B,MAAM,IAAI,GAAGf,EAAG,MAAM,CAACE,MAAM,CAAC,OAAS,GAAG,KAAO,OAAO,QAAU,iBAAiB,CAACF,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,MAAM,CAACF,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,OAAO,KAAO,gBAAgB,CAACF,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACQ,YAAY,CAAC,MAAQ,OAAON,MAAM,CAAC,MAAQH,EAAIkB,SAAS,YAAc,MAAM,UAAW,GAAMC,SAAS,CAAC,MAAQ,SAASC,GAAQ,OAAOpB,EAAIqB,eAAeC,MAAM,KAAMhC,eAAeW,EAAG,MAAM,CAACsB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASd,MAAOX,EAAI0B,SAAUV,WAAW,aAAaW,YAAY,WAAWC,GAAG,CAAC,UAAY,SAASR,GAAQ,OAAOpB,EAAI6B,eAAe,IAAI,SAAW,SAAST,GAAQ,OAAOpB,EAAI6B,eAAe,MAAM,CAAC5B,EAAG,OAAO,CAACE,MAAM,CAAC,KAAOH,EAAI8B,UAAUF,GAAG,CAAC,mBAAmB5B,EAAI+B,gBAAgB,IAAI,MAAM,GAAG9B,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,QAAQ,IAAI,GAAGF,EAAG,WAAWA,EAAG,MAAM,CAACQ,YAAY,CAAC,QAAU,OAAO,eAAiB,gBAAgB,OAAS,iBAAiB,CAACR,EAAG,OAAOA,EAAG,MAAM,CAACQ,YAAY,CAAC,MAAQ,UAAU,CAACR,EAAG,SAAS,CAACQ,YAAY,CAAC,OAAS,UAAUN,MAAM,CAAC,KAAO,UAAU,KAAO,UAAUyB,GAAG,CAAC,MAAQ,SAASR,GAAQ,OAAOpB,EAAIgC,4BAA4B,CAAChC,EAAIK,GAAG,SAAS,KAAKJ,EAAG,MAAM,CAACQ,YAAY,CAAC,OAAS,gBAAgB,CAACR,EAAG,QAAQ,CAACE,MAAM,CAAC,QAAUH,EAAIiC,OAAO,KAAOjC,EAAIkC,YAAY,GAAGjC,EAAG,MAAM,CAACQ,YAAY,CAAC,OAAS,iBAAiB,CAACR,EAAG,SAAS,CAACQ,YAAY,CAAC,YAAc,QAAQN,MAAM,CAAC,KAAO,WAAWyB,GAAG,CAAC,MAAQ,SAASR,GAAQ,OAAOpB,EAAImC,aAAa,kBAAkB,CAACnC,EAAIK,GAAG,QAAQJ,EAAG,SAAS,CAAC2B,GAAG,CAAC,MAAQ,SAASR,GAAQ,OAAOpB,EAAIoC,YAAY,kBAAkB,CAACpC,EAAIK,GAAG,SAAS,GAAGJ,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,KAAK,MAAQH,EAAIqC,OAAO3B,MAAM,CAACC,MAAOX,EAAIsC,KAAMzB,SAAS,SAAUC,GAAMd,EAAIsC,KAAKxB,GAAKE,WAAW,SAAS,CAACf,EAAG,OAAO,CAACK,IAAI,UAAUH,MAAM,CAAC,MAAQH,EAAIuC,QAAQ,MAAQvC,EAAIwC,YAAY,cAAc,MAAM,CAACvC,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,OAAO,KAAO,eAAe,CAACF,EAAG,QAAQ,CAACQ,YAAY,CAAC,MAAQ,OAAON,MAAM,CAAC,YAAc,aAAaO,MAAM,CAACC,MAAOX,EAAIuC,QAAQE,WAAY5B,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIuC,QAAS,aAAczB,IAAME,WAAW,yBAAyB,GAAGf,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,KAAK,KAAO,aAAa,CAACF,EAAG,cAAc,CAACQ,YAAY,CAAC,MAAQ,OAAON,MAAM,CAAC,YAAc,UAAUO,MAAM,CAACC,MAAOX,EAAIuC,QAAQG,SAAU7B,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIuC,QAAS,WAAYzB,IAAME,WAAW,uBAAuB,GAAGf,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,KAAK,KAAO,YAAY,CAACF,EAAG,QAAQ,CAACQ,YAAY,CAAC,MAAQ,OAAON,MAAM,CAAC,YAAc,WAAWO,MAAM,CAACC,MAAOX,EAAIuC,QAAQI,QAAS9B,SAAS,SAAUC,GAAMd,EAAIe,KAAKf,EAAIuC,QAAS,UAAWzB,IAAME,WAAW,sBAAsB,IAAI,GAAGf,EAAG,MAAM,CAACE,MAAM,CAAC,KAAO,UAAUC,KAAK,UAAU,CAACH,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,WAAWyB,GAAG,CAAC,MAAQ,SAASR,GAAQ,OAAOpB,EAAI4C,UAAU,cAAc,CAAC5C,EAAIK,GAAG,QAAQJ,EAAG,SAAS,CAAC2B,GAAG,CAAC,MAAQ,SAASR,GAAQ,OAAOpB,EAAI6C,UAAU,cAAc,CAAC7C,EAAIK,GAAG,SAAS,IAAI,IAAI,IAEjvHyC,EAAkB,G,4CCsIP,GACfC,KADA,WACA,WACA,kBACA,eACA,oCACAlC,uBAEAA,KAGA,OACAmC,aACAtB,YACAY,QACAC,SACAU,cACAR,gBACAC,cACAC,cAEAO,UACAC,iBACArB,YACAI,WACAjB,eACAgB,QACA,CACAmB,iBACAf,cAEA,CACAe,eACAf,YAEA,CACAe,cACAf,YAEA,CACAA,WACAgB,UACAtD,qBACA,gBACAuD,EACA,WACA,CACAC,OACAC,eACAC,cAEA7B,IACA8B,iBACA,2CAIA,MAEAJ,UACAK,OACAN,YACAO,0BACAC,cACAC,uBACAC,uBACAC,wBAGAV,EACA,SACA,CACAC,OACAU,WACA5B,qBACA6B,aAEAtC,IACA,mBACA,wBAIA,CACA0B,EACA,WACA,CACAK,OACAK,gBAEAT,OACAC,aACAC,aACAU,kBAGA,aAQA5D,aACAK,aACAK,iBACAmD,kBAEA5B,aACAS,UACA,CACAO,cACAa,MACAC,YACAC,iBAGA5B,SACA,CACAa,cACAgB,OACAC,sBACAF,iBAGA9B,YACA,CACA6B,YACAE,OACAC,sBACAF,kBAIA/D,cACAI,SACA,CACA4C,cACAc,YACAG,mBACAF,gBAEA,CACAA,iBACAG,cAGAzD,aACA,CACAqD,YACAC,eACAE,mBAEA,CACAD,OACAC,wBACAF,oBAMAI,UACAzD,oBAEA,IADA,SACA,gCACA,EAKAA,qCAJA,wBACAA,2BAMA,UAEAmB,MAdA,WAeA,yCAGAuC,SAEAC,SAFA,WAEA,WACAC,iEACA,8CAIAzD,eARA,WASA,8BAGAQ,eAZA,SAYA2B,GACA,oBAGAxB,uBAhBA,SAgBAe,EAAAtE,GACA,GACA,iCACA,uBACA,cAEA,sBAEA,cAGAoE,UA3BA,SA2BArB,GACA,4BACA,cAGAuD,YAhCA,SAgCAjD,EAAA/B,GACA,2BACA+B,cACA,qCACA,kCAGA,UAGA/B,OA1CA,SA0CAuD,EA1CA,GA0CA,kBAAI,EAAJ,OACA,SACA,OACA,CACAK,OACAG,uBACAT,eAGA,CACAC,UACAA,UACAC,OACAC,2BAEAG,OACAqB,qBAGA1B,uBAMAvB,YAnEA,SAmEAgB,GACA,iBACA,0CACA,kBAGAH,UAzEA,SAyEApB,GAAA,WACA,oCACA,EACA,oBACA,6CAEA,4BACA,iBACA,QACA,EACAyD,wCAIA,4BAGA,4BACA,cAGA9C,aA9FA,SA8FAX,GAAA,WACA,uBACA,mCAEA,oCACA,MACA,QACA,+BACA0D,UACAA,gCACAA,wCACAA,2CAEAJ,kBACAK,KAAA,yBAAA7G,WACA8G,MAAA,YACA,2BACA9G,gBACAkD,qBAIA6D,OAAA,YACAC,uBAGA,6BAMAlD,YA9HA,SA8HAZ,GACA,4BACA,mBACAA,mBAIA+D,YArIA,WAqIA,WACAT,iEACA,iCACA,wBAKAU,UA7IA,SA6IA/G,GACA,oCAGAgH,QArUA,WAsUA,gBACA,oBAEAC,UAzUA,cCxIoS,I,wBCQhSC,EAAY,eACd,EACA5F,EACA+C,GACA,EACA,KACA,WACA,MAIa,aAAA6C,E","file":"js/chunk-5cd06232.fd08eb5f.js","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","export * from \"-!../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../css-loader/index.js??ref--6-oneOf-1-1!../../../vue-loader/lib/loaders/stylePostLoader.js!../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./cscp_dic_add.vue?vue&type=style&index=0&id=1703c39c&prod&scoped=true&lang=css&\"","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"新建字典\")]),_c('Form',{ref:\"formDicType\",attrs:{\"model\":_vm.formDicType,\"rules\":_vm.ruleValidate,\"label-width\":100}},[_c('Row',{attrs:{\"gutter\":16,\"type\":\"flex\",\"justify\":\"space-around\"}},[_c('i-col',{attrs:{\"span\":\"9\"}},[_c('FormItem',{attrs:{\"label\":\"字典类型\",\"prop\":\"dicType\"}},[_c('div',[_c('InputNumber',{staticStyle:{\"width\":\"70%\"},attrs:{\"placeholder\":\"请输入字典类型\"},model:{value:(_vm.formDicType.dicType),callback:function ($$v) {_vm.$set(_vm.formDicType, \"dicType\", $$v)},expression:\"formDicType.dicType\"}})],1)])],1),_c('i-col',{attrs:{\"span\":\"9\"}},[_c('FormItem',{attrs:{\"label\":\"类型名称\",\"prop\":\"dicTypeName\"}},[_c('div',[_c('Input',{staticStyle:{\"width\":\"70%\"},attrs:{\"placeholder\":\"请输入类型名称\"},model:{value:(_vm.formDicType.dicTypeName),callback:function ($$v) {_vm.$set(_vm.formDicType, \"dicTypeName\", $$v)},expression:\"formDicType.dicTypeName\"}})],1)])],1)],1),_c('Row',{attrs:{\"gutter\":16,\"type\":\"flex\",\"justify\":\"space-around\"}},[_c('i-col',{attrs:{\"span\":\"9\"}},[_c('FormItem',{attrs:{\"label\":\"父级名称\",\"prop\":\"dicParentId\"}},[_c('div',[_c('Input',{staticStyle:{\"width\":\"70%\"},attrs:{\"value\":_vm.showName,\"placeholder\":\"请选择\",\"readonly\":true},nativeOn:{\"click\":function($event){return _vm.showOrHideTree.apply(null, arguments)}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTree),expression:\"showTree\"}],staticClass:\"treeShow\",on:{\"mouseover\":function($event){return _vm.treeShowToggle(1)},\"mouseout\":function($event){return _vm.treeShowToggle(2)}}},[_c('Tree',{attrs:{\"data\":_vm.treeData},on:{\"on-select-change\":_vm.changeCheck}})],1)],1)])],1),_c('i-col',{attrs:{\"span\":\"9\"}})],1)],1),_c('Divider'),_c('div',{staticStyle:{\"display\":\"flex\",\"justifyContent\":\"space-between\",\"margin\":\"30px 3% 0 3%\"}},[_c('div'),_c('div',{staticStyle:{\"float\":\"right\"}},[_c('Button',{staticStyle:{\"margin\":\"0 50px\"},attrs:{\"type\":\"primary\",\"icon\":\"md-add\"},on:{\"click\":function($event){return _vm.handleCreateOrEditItem()}}},[_vm._v(\"新建\")])],1)]),_c('Row',{staticStyle:{\"margin\":\"5px 3% 0 3%\"}},[_c('Table',{attrs:{\"columns\":_vm.column,\"data\":_vm.dicData}})],1),_c('div',{staticStyle:{\"margin\":\"50px 0 0 45%\"}},[_c('Button',{staticStyle:{\"marginRight\":\"20px\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleSubmit('formDicType')}}},[_vm._v(\"提交\")]),_c('Button',{on:{\"click\":function($event){return _vm.handleReset('formDicType')}}},[_vm._v(\"取消\")])],1),_c('Modal',{attrs:{\"width\":\"30\",\"title\":_vm.title},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('Form',{ref:\"formDic\",attrs:{\"model\":_vm.formDic,\"rules\":_vm.formDicRule,\"label-width\":100}},[_c('FormItem',{attrs:{\"label\":\"字典名称\",\"prop\":\"dicDisplay\"}},[_c('Input',{staticStyle:{\"width\":\"85%\"},attrs:{\"placeholder\":\"请输入字典中文名称\"},model:{value:(_vm.formDic.dicDisplay),callback:function ($$v) {_vm.$set(_vm.formDic, \"dicDisplay\", $$v)},expression:\"formDic.dicDisplay\"}})],1),_c('FormItem',{attrs:{\"label\":\"排序\",\"prop\":\"dicOrder\"}},[_c('InputNumber',{staticStyle:{\"width\":\"85%\"},attrs:{\"placeholder\":\"搜索字典排序\"},model:{value:(_vm.formDic.dicOrder),callback:function ($$v) {_vm.$set(_vm.formDic, \"dicOrder\", $$v)},expression:\"formDic.dicOrder\"}})],1),_c('FormItem',{attrs:{\"label\":\"图标\",\"prop\":\"dicIcon\"}},[_c('Input',{staticStyle:{\"width\":\"85%\"},attrs:{\"placeholder\":\"请输入icon\"},model:{value:(_vm.formDic.dicIcon),callback:function ($$v) {_vm.$set(_vm.formDic, \"dicIcon\", $$v)},expression:\"formDic.dicIcon\"}})],1)],1),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.dicSubmit('formDic')}}},[_vm._v(\"提交\")]),_c('Button',{on:{\"click\":function($event){return _vm.dicCancel('formDic')}}},[_vm._v(\"取消\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- Created by ctsi-biyi-generator -->\r\n<template>\r\n  <Card>\r\n    <p slot=\"title\">新建字典</p>\r\n    <Form\r\n      ref=\"formDicType\"\r\n      :model=\"formDicType\"\r\n      :rules=\"ruleValidate\"\r\n      :label-width=\"100\"\r\n    >\r\n      <Row :gutter=\"16\" type=\"flex\" justify=\"space-around\">\r\n        <i-col span=\"9\">   \r\n            <FormItem label=\"字典类型\" prop=\"dicType\">\r\n              <div >\r\n            <InputNumber\r\n              style=\"width: 70%\"\r\n              v-model=\"formDicType.dicType\"\r\n              placeholder=\"请输入字典类型\"\r\n            />\r\n            </div>\r\n            </FormItem>\r\n        </i-col>\r\n           <i-col span=\"9\">\r\n          <FormItem label=\"类型名称\" prop=\"dicTypeName\">\r\n            <div >\r\n              <Input\r\n              style=\"width: 70%\"\r\n              v-model=\"formDicType.dicTypeName\"\r\n              placeholder=\"请输入类型名称\"\r\n            />\r\n            </div>\r\n          </FormItem>\r\n        </i-col>\r\n      </Row>\r\n      <Row :gutter=\"16\" type=\"flex\" justify=\"space-around\">\r\n        <i-col span=\"9\">\r\n          <FormItem label=\"父级名称\" prop=\"dicParentId\">\r\n            <div >\r\n              <Input\r\n              :value=\"showName\"\r\n              placeholder=\"请选择\"\r\n              style=\"width: 70%\"\r\n              :readonly=\"true\"\r\n              @click.native=\"showOrHideTree\"\r\n            />\r\n            <div\r\n              v-show=\"showTree\"\r\n              class=\"treeShow\"\r\n              @mouseover=\"treeShowToggle(1)\"\r\n              @mouseout=\"treeShowToggle(2)\"\r\n            >\r\n              <Tree\r\n                :data=\"treeData\"\r\n                @on-select-change=\"changeCheck\"\r\n              />\r\n            </div>\r\n            </div>\r\n          </FormItem>\r\n        </i-col>\r\n        <i-col span=\"9\">\r\n        </i-col>\r\n      </Row>\r\n    </Form>\r\n    <Divider />\r\n    <div style=\"display:flex;justifyContent:space-between;margin:30px 3% 0 3%\">\r\n      <div></div>\r\n      <div style=\"float: right\"> \r\n      <Button\r\n            @click=\"handleCreateOrEditItem()\"\r\n            type=\"primary\"\r\n            icon=\"md-add\"\r\n            style=\"margin: 0 50px\"\r\n            >新建</Button\r\n          ></div>\r\n    </div>\r\n    <Row style=\"margin:5px 3% 0 3%\">\r\n      <Table :columns=\"column\" :data=\"dicData\"></Table>\r\n      <!-- <Row type=\"flex\" justify=\"end\" align=\"middle\">\r\n        <div v-if=\"\">\r\n          <Page\r\n          :current=\"currentPageNum + 1\"\r\n          :total=\"dataCount\"\r\n          @on-change=\"handlePageChange\"\r\n          @on-page-size-change=\"changePage\"\r\n          show-elevator\r\n          show-sizer\r\n          show-total\r\n          style=\"padding: 10px 10px 0 0\"\r\n        ></Page>\r\n        </div>\r\n      </Row> -->\r\n    </Row>\r\n    <div style=\"margin:50px 0 0 45%\">\r\n      <Button type=\"primary\" style=\"marginRight:20px\" @click=\"handleSubmit('formDicType')\">提交</Button>\r\n      <Button @click=\"handleReset('formDicType')\">取消</Button>\r\n    </div>\r\n    <Modal\r\n      v-model=\"show\"\r\n      width='30'\r\n      :title=\"title\"\r\n      >\r\n      <Form ref=\"formDic\" :model=\"formDic\" :rules=\"formDicRule\" :label-width=\"100\">\r\n          <FormItem label=\"字典名称\" prop=\"dicDisplay\">\r\n            <Input\r\n              style=\"width: 85%\"\r\n              v-model=\"formDic.dicDisplay\"\r\n              placeholder=\"请输入字典中文名称\"\r\n            />\r\n          </FormItem>\r\n\r\n          <FormItem label=\"排序\" prop=\"dicOrder\">\r\n            <InputNumber\r\n              style=\"width: 85%\"\r\n              v-model=\"formDic.dicOrder\"\r\n              placeholder=\"搜索字典排序\"\r\n            />\r\n          </FormItem>\r\n    \r\n          <FormItem label=\"图标\" prop=\"dicIcon\">\r\n            <Input\r\n              v-model=\"formDic.dicIcon\"\r\n              placeholder=\"请输入icon\"\r\n              style=\"width: 85%\"\r\n            />\r\n          </FormItem>\r\n      </Form>\r\n      <div slot=\"footer\">\r\n        <Button type=\"primary\" @click=\"dicSubmit('formDic')\">提交</Button>\r\n        <Button @click=\"dicCancel('formDic')\">取消</Button>\r\n      </div>\r\n    </Modal>\r\n  </Card>\r\n</template>\r\n<script>\r\nimport Util from \"@/libs/util.js\";\r\n\r\nexport default {\r\n  data() {\r\n    const validateType = (rule, value, callback)=>{\r\n      let arr = this.dicArr\r\n      if(arr.find(item=>item === value)){\r\n        callback(new Error('此类型已存在'))\r\n      }else{\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      checkData: [],\r\n      showTree: false,\r\n      show: false,\r\n      formDic: {\r\n        dicValue: null,\r\n        dicDisplay: null,\r\n        dicOrder: null,\r\n        dicIcon: null,\r\n      },\r\n      dicArr:[],\r\n      formStatus: \"add\",\r\n      treeData: [],\r\n      dicData: [],\r\n      dicTypeName: [],\r\n      column: [\r\n        {\r\n          key: \"dicDisplay\",\r\n          title: \"字典名称\",\r\n        },\r\n        {\r\n          key: \"dicOrder\",\r\n          title: \"排序\",\r\n        },\r\n        {\r\n          key: \"dicIcon\",\r\n          title: \"图标\",\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          width: 155,\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"T-Button\",\r\n                {\r\n                  props: {\r\n                    type: \"primary\",\r\n                    size: \"small\",\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.handleCreateOrEditItem(params.row, params.index);\r\n                    },\r\n                  },\r\n                },\r\n                \"编辑\"\r\n              ),\r\n              h(\"span\", {\r\n                style: {\r\n                  width: \"1px\",\r\n                  backgroundColor: \"#2d8cf0\",\r\n                  height: \"15px\",\r\n                  display: \"inline-block\",\r\n                  verticalAlign: \"middle\",\r\n                  margin: \"-2px 10px 0\",\r\n                },\r\n              }),\r\n              h(\r\n                \"Poptip\",\r\n                {\r\n                  props: {\r\n                    confirm: true,\r\n                    title: \"您确定要删除这条数据吗?\",\r\n                    transfer: true,\r\n                  },\r\n                  on: {\r\n                    \"on-ok\": () => {\r\n                      this.deleteDic(params.index);\r\n                    },\r\n                  },\r\n                },\r\n                [\r\n                  h(\r\n                    \"T-Button\",\r\n                    {\r\n                      style: {\r\n                        margin: \"0 5px\",\r\n                      },\r\n                      props: {\r\n                        type: \"error\",\r\n                        size: \"small\",\r\n                        placement: \"top\",\r\n                      },\r\n                    },\r\n                    \"删除\"\r\n                  ),\r\n                ]\r\n              ),\r\n            ]);\r\n          },\r\n        },\r\n      ],\r\n      formDicType: {\r\n        dicType: null,\r\n        dicTypeName: null,\r\n        dicParentId:null\r\n      },\r\n      formDicRule: {\r\n        dicValue: [\r\n          {\r\n            type: \"number\",\r\n            min: 1,\r\n            required: true,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        dicIcon: [\r\n          {\r\n            type: \"string\",\r\n            max: 50,\r\n            message: \"icon最多50个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        dicDisplay: [\r\n          {\r\n            required: true,\r\n            max: 50,\r\n            message: \"字典名称最多50个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n      ruleValidate: {\r\n        dicType: [\r\n          {\r\n            type: \"number\",\r\n            required: true,\r\n            message:'请填写字典类型。',\r\n            trigger: \"blur\",\r\n          },\r\n          {\r\n            trigger:'change',\r\n            validator: validateType\r\n          }\r\n        ],\r\n        dicTypeName:[\r\n          {\r\n            required: true,\r\n            trigger:'blur',\r\n            message:'请填写类型名称'\r\n          },\r\n          {\r\n            max: 50,\r\n            message: \"字典类型名称最多50个字符\",\r\n            trigger: \"blur\",\r\n          }\r\n        ]\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    showName: function () {\r\n      let showName = \"\";\r\n      for (let i = 0; i < this.checkData.length; i++) {\r\n        if (!showName) {\r\n          if (this.checkData[i] !== undefined) {\r\n            showName = this.checkData[i].title;\r\n          }\r\n        } else {\r\n          showName = showName + \",\" + this.checkData[i].title;\r\n        }\r\n      }\r\n      return showName;\r\n    },\r\n    title(){\r\n      return this.formStatus == 'add' ? '新建': '编辑'\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化树结构\r\n    initTree() {\r\n      Util.http.get(\"/api/cscpDics/getTree\").then((res) => {\r\n        this.treeData = this.setTreeNode(res.data, this.render);;\r\n      });\r\n    },\r\n\r\n    showOrHideTree() {\r\n      this.showTree = !this.showTree;\r\n    },\r\n\r\n    treeShowToggle(type) {\r\n      this.showTree = type == 1 ? true : false;\r\n    },\r\n    // 新建、编辑\r\n    handleCreateOrEditItem(data, index) {\r\n      if (data) {\r\n        this.formDic = Object.assign({}, data);\r\n        this.formStatus = \"edit\";\r\n        this.index = index;\r\n      } else {\r\n        this.formStatus = \"add\";\r\n      }\r\n      this.show = true;\r\n    },\r\n    // 取消\r\n    dicCancel(name) {\r\n      this.$refs[name].resetFields();\r\n      this.show = false;\r\n    },\r\n    // 添加图标\r\n    setTreeNode(treeData, render) {\r\n      for (let i = 0; i < treeData.length; i++) {\r\n        treeData[i].render = render;\r\n        if (treeData[i].children && treeData[i].children.length) {\r\n          this.setTreeNode(treeData[i].children, render);\r\n        }\r\n      }\r\n      return treeData;\r\n    },\r\n\r\n    render(h, { root, node, data }) {\r\n      return h(\r\n        \"span\",\r\n        {\r\n          style: {\r\n            display: \"inline-block\",\r\n            width: \"100%\",\r\n          },\r\n        },\r\n        [\r\n          h(\"span\", [\r\n            h(\"Icon\", {\r\n              props: {\r\n                type: \"ios-folder-outline\",\r\n              },\r\n              style: {\r\n                marginRight: \"8px\",\r\n              },\r\n            }),\r\n            h(\"span\", data.title),\r\n          ]),\r\n        ]\r\n      );\r\n    },\r\n    // 选择树数据\r\n    changeCheck(data) {\r\n      this.checkData = data;\r\n      this.formDicType.dicParentId = data[0].dicType;\r\n      this.showTree = false\r\n    },\r\n\r\n    dicSubmit(name) {\r\n      this.$refs[name].validate((valid) => {\r\n        if (valid) {\r\n          if (this.formStatus == \"add\") {\r\n            this.dicData.push(Object.assign({}, this.formDic));\r\n          } else {\r\n            this.dicData.splice(this.index, 1);\r\n            this.dicData.splice(\r\n              this.index,\r\n              0,\r\n              JSON.parse(JSON.stringify(this.formDic))\r\n            );\r\n          }\r\n        } else {\r\n          this.$Message.error(\"提交失败\");\r\n        }\r\n      });\r\n      this.$refs[name].resetFields();\r\n      this.show = false;\r\n    },\r\n    // 提交\r\n    handleSubmit(name) {\r\n      if(this.dicData.length == 0){\r\n        this.$Message.error('请先添加一条字典数据！');\r\n      }else{\r\n      this.$refs[name].validate((valid) => {\r\n        if (valid) {\r\n          let self = this;\r\n          this.dicData.forEach(item => {\r\n            item.id = null\r\n            item.dicType = self.formDicType.dicType\r\n            item.dicTypeName = self.formDicType.dicTypeName\r\n            item.dicParentId = self.formDicType.dicParentId\r\n          });\r\n          Util.http\r\n            .post('/api/cscpDics/addLists', self.dicData)\r\n            .then((response) => {\r\n              this.$Message.success(\"提交成功\");\r\n              self.$router.push({\r\n                name: \"paramDic\",\r\n              });\r\n            }\r\n            )\r\n            .catch((e) => {\r\n              console.log(e);\r\n            });\r\n        } else {\r\n          this.$Message.error(\"提交失败\");\r\n        }\r\n      });\r\n      }\r\n    },\r\n\r\n    handleReset(name) {\r\n      this.$refs[name].resetFields();\r\n      this.$router.push({\r\n        name: \"paramDic\",\r\n      });\r\n    },\r\n    // 校验Type不能重复\r\n    initDicList(){\r\n      Util.http.get(\"/api/cscpDics/getType\").then(res=>{\r\n        this.dicArr = res.data.map(item=>{\r\n          return item.dicType\r\n        })\r\n      })\r\n    },\r\n\r\n    deleteDic(index) {\r\n      this.dicData.splice(this.index, 1);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initTree();\r\n    this.initDicList()\r\n  },\r\n  activated() {\r\n    \r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.treeShow {\r\n  position: absolute;\r\n  z-index: 9999;\r\n  max-height: 300px;\r\n  overflow: auto;\r\n  width: 280px;\r\n  background-color: #fff;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>\r\n","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./cscp_dic_add.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./cscp_dic_add.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cscp_dic_add.vue?vue&type=template&id=1703c39c&scoped=true&\"\nimport script from \"./cscp_dic_add.vue?vue&type=script&lang=js&\"\nexport * from \"./cscp_dic_add.vue?vue&type=script&lang=js&\"\nimport style0 from \"./cscp_dic_add.vue?vue&type=style&index=0&id=1703c39c&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1703c39c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}