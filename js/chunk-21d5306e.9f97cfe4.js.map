{"version":3,"sources":["webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_type.vue","webpack:///node_modules/biyi-dic/src/pages/cscp_dic_type.vue","webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_type.vue?f8b0","webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_type.vue?136f","webpack:///./node_modules/biyi-dic/src/pages/cscp_dic_type.vue?1d51"],"names":["render","_vm","this","_c","_self","attrs","slot","_v","ref","formDicType","ruleValidate","staticStyle","model","value","dicType","callback","$$v","$set","expression","dicTypeName","nativeOn","$event","showOrHideTree","apply","arguments","showName","directives","name","rawName","showTree","staticClass","on","treeShowToggle","treeData","changeCheck","handleSubmit","handleReset","staticRenderFns","data","checkData","show","dicParentId","type","required","trigger","max","message","computed","methods","Util","put","then","setTreeNode","h","style","display","width","props","marginRight","init","initTree","title","mounted","component"],"mappings":"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","file":"js/chunk-21d5306e.9f97cfe4.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Card',[_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"编辑类型\")]),_c('Form',{ref:\"formDicType\",attrs:{\"model\":_vm.formDicType,\"rules\":_vm.ruleValidate,\"label-width\":100}},[_c('Row',{attrs:{\"gutter\":16,\"type\":\"flex\",\"justify\":\"space-around\"}},[_c('i-col',{attrs:{\"span\":\"9\"}},[_c('FormItem',{attrs:{\"label\":\"字典类型\",\"prop\":\"dicType\"}},[_c('div',[_c('InputNumber',{staticStyle:{\"width\":\"280px\"},attrs:{\"disabled\":\"\",\"placeholder\":\"请输入字典类型\"},model:{value:(_vm.formDicType.dicType),callback:function ($$v) {_vm.$set(_vm.formDicType, \"dicType\", $$v)},expression:\"formDicType.dicType\"}})],1)])],1),_c('i-col',{attrs:{\"span\":\"9\"}},[_c('FormItem',{attrs:{\"label\":\"类型名称\",\"prop\":\"dicTypeName\"}},[_c('div',[_c('Input',{staticStyle:{\"width\":\"280px\"},attrs:{\"placeholder\":\"请输入类型名称\"},model:{value:(_vm.formDicType.dicTypeName),callback:function ($$v) {_vm.$set(_vm.formDicType, \"dicTypeName\", $$v)},expression:\"formDicType.dicTypeName\"}})],1)])],1)],1),_c('Row',{attrs:{\"gutter\":16,\"type\":\"flex\",\"justify\":\"space-around\"}},[_c('i-col',{attrs:{\"span\":\"9\"}},[_c('FormItem',{attrs:{\"label\":\"父级名称\",\"prop\":\"dicParentId\"}},[_c('div',[_c('Input',{staticStyle:{\"width\":\"280px\"},attrs:{\"placeholder\":\"请选择\",\"readonly\":true},nativeOn:{\"click\":function($event){return _vm.showOrHideTree.apply(null, arguments)}},model:{value:(_vm.showName),callback:function ($$v) {_vm.showName=$$v},expression:\"showName\"}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showTree),expression:\"showTree\"}],staticClass:\"treeShow\",on:{\"mouseover\":function($event){return _vm.treeShowToggle(1)},\"mouseout\":function($event){return _vm.treeShowToggle(2)}}},[_c('Tree',{attrs:{\"data\":_vm.treeData},on:{\"on-select-change\":_vm.changeCheck}})],1)],1)])],1),_c('i-col',{attrs:{\"span\":\"9\"}})],1),_c('div',{staticStyle:{\"margin\":\"50px 0 0 45%\"}},[_c('Button',{staticStyle:{\"marginRight\":\"20px\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.handleSubmit('formDicType')}}},[_vm._v(\"提交\")]),_c('Button',{on:{\"click\":function($event){return _vm.handleReset('formDicType')}}},[_vm._v(\"取消\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <Card>\r\n    <p slot=\"title\">编辑类型</p>\r\n    <Form\r\n      ref=\"formDicType\"\r\n      :model=\"formDicType\"\r\n      :rules=\"ruleValidate\"\r\n      :label-width=\"100\"\r\n    >\r\n      <Row :gutter=\"16\" type=\"flex\" justify=\"space-around\">\r\n        <i-col span=\"9\">\r\n          <FormItem label=\"字典类型\" prop=\"dicType\">\r\n            <div>\r\n              <InputNumber\r\n                disabled\r\n                style=\"width: 280px\"\r\n                v-model=\"formDicType.dicType\"\r\n                placeholder=\"请输入字典类型\"\r\n              />\r\n            </div>\r\n          </FormItem>\r\n        </i-col>\r\n        <i-col span=\"9\">\r\n          <FormItem label=\"类型名称\" prop=\"dicTypeName\">\r\n            <div>\r\n              <Input\r\n                style=\"width: 280px\"\r\n                v-model=\"formDicType.dicTypeName\"\r\n                placeholder=\"请输入类型名称\"\r\n              />\r\n            </div>\r\n          </FormItem>\r\n        </i-col>\r\n      </Row>\r\n      <Row :gutter=\"16\" type=\"flex\" justify=\"space-around\">\r\n        <i-col span=\"9\">\r\n          <FormItem label=\"父级名称\" prop=\"dicParentId\">\r\n            <div>\r\n              <Input\r\n                v-model=\"showName\"\r\n                placeholder=\"请选择\"\r\n                style=\"width: 280px\"\r\n                :readonly=\"true\"\r\n                @click.native=\"showOrHideTree\"\r\n              />\r\n              <div\r\n                v-show=\"showTree\"\r\n                class=\"treeShow\"\r\n                @mouseover=\"treeShowToggle(1)\"\r\n                @mouseout=\"treeShowToggle(2)\"\r\n              >\r\n                <Tree :data=\"treeData\" @on-select-change=\"changeCheck\" />\r\n              </div>\r\n            </div>\r\n          </FormItem>\r\n        </i-col>\r\n        <i-col span=\"9\"> </i-col>\r\n      </Row>\r\n      <div style=\"margin: 50px 0 0 45%\">\r\n        <Button type=\"primary\" @click=\"handleSubmit('formDicType')\" style=\"marginRight:20px\"\r\n          >提交</Button\r\n        >\r\n        <Button @click=\"handleReset('formDicType')\"\r\n          >取消</Button\r\n        >\r\n      </div>\r\n    </Form>\r\n  </Card>\r\n</template>\r\n\r\n<script>\r\nimport Util from \"@/libs/util.js\";\r\nexport default {\r\n  name: \"editType\",\r\n  data() {\r\n    return {\r\n      treeData: [],\r\n      checkData: [],\r\n      showTree: false,\r\n      show: false,\r\n      formDicType: {\r\n        dicType: null,\r\n        dicTypeName: null,\r\n        dicParentId: null,\r\n      },\r\n      ruleValidate: {\r\n        dicType: [\r\n          {\r\n            type: \"number\",\r\n            required: true,\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        dicTypeName: [\r\n          {\r\n            required: true,\r\n            max: 50,\r\n            message: \"字典类型名称最多50个字符\",\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    showName() {\r\n      let showName = \"\";\r\n      for (let i = 0; i < this.checkData.length; i++) {\r\n        if (!showName) {\r\n          if (this.checkData[i] !== undefined) {\r\n            showName = this.checkData[i].title;\r\n          }\r\n        } else {\r\n          showName = showName + \",\" + this.checkData[i].title;\r\n        }\r\n      }\r\n      return showName;\r\n    },\r\n  },\r\n  methods: {\r\n    // 重置\r\n    handleReset(name) {\r\n      this.$refs[name].resetFields();\r\n      this.$router.push({\r\n        name: \"paramDic\",\r\n      });\r\n    },\r\n    // 提交\r\n    handleSubmit(name) {\r\n      if (this.formDicType.dicType == this.formDicType.dicParentId) {\r\n        this.$Message.error(\"父级不能设置为自己！\");\r\n      } else {\r\n        this.$refs[name].validate((valid) => {\r\n          if (valid) {\r\n            // console.log(this.formDicType, \"type\");\r\n            Util.http\r\n              .put(\"/api/cscpDics/updateType\", this.formDicType)\r\n              .then(() => {\r\n                this.$Message.success(\"提交成功\");\r\n                this.$router.push({\r\n                  name: \"paramDic\",\r\n                });\r\n              });\r\n          } else {\r\n            this.$Message.error(\"提交失败\");\r\n            this.$router.push({\r\n              name: \"paramDic\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n\r\n    showOrHideTree() {\r\n      this.showTree = !this.showTree;\r\n    },\r\n\r\n    treeShowToggle(type) {\r\n      this.showTree = type == 1 ? true : false;\r\n    },\r\n    // 添加图标\r\n    setTreeNode(treeData, render) {\r\n      for (let i = 0; i < treeData.length; i++) {\r\n        treeData[i].render = render;\r\n        if (treeData[i].children && treeData[i].children.length) {\r\n          this.setTreeNode(treeData[i].children, render);\r\n        }\r\n      }\r\n      return treeData;\r\n    },\r\n\r\n    render(h, { root, node, data }) {\r\n      return h(\r\n        \"span\",\r\n        {\r\n          style: {\r\n            display: \"inline-block\",\r\n            width: \"100%\",\r\n          },\r\n        },\r\n        [\r\n          h(\"span\", [\r\n            h(\"Icon\", {\r\n              props: {\r\n                type: \"ios-folder-outline\",\r\n              },\r\n              style: {\r\n                marginRight: \"8px\",\r\n              },\r\n            }),\r\n            h(\"span\", data.title),\r\n          ]),\r\n        ]\r\n      );\r\n    },\r\n\r\n    init() {\r\n      this.formDicType = JSON.parse(JSON.stringify(this.$route.params.type));\r\n    },\r\n    // 初始化树形结构\r\n    initTree() {\r\n      let id = this.$route.params.type.dicParentId;\r\n      let self = this;\r\n      if (id) {\r\n        Util.http.get(`/api/cscpDics/getTreeExpand/${id}`).then((res) => {\r\n          this.treeData = this.setTreeNode(res.data, self.render);\r\n          this.checkData = [{ title: this.$route.params.type.parentIdName }];\r\n        });\r\n      } else {\r\n        Util.http.get(\"/api/cscpDics/getTree\").then((res) => {\r\n        this.treeData = this.setTreeNode(res.data, self.render);\r\n      });\r\n      }\r\n    },\r\n    // 选择树数据\r\n    changeCheck(data) {\r\n      this.checkData = data;\r\n      if (data.length == 1) {\r\n        this.formDicType.dicParentId = data[0].dicType;\r\n      // this.showTree = false\r\n      } else {\r\n        this.formDicType.dicParentId = null\r\n      } \r\n    },\r\n  },\r\n  mounted() {\r\n    this.initTree();\r\n    this.init();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.treeShow {\r\n  position: absolute;\r\n  z-index: 9999;\r\n  max-height: 300px;\r\n  overflow: auto;\r\n  width: 280px;\r\n  background-color: #fff;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  box-shadow: 0 1px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./cscp_dic_type.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./cscp_dic_type.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cscp_dic_type.vue?vue&type=template&id=4e049424&scoped=true&\"\nimport script from \"./cscp_dic_type.vue?vue&type=script&lang=js&\"\nexport * from \"./cscp_dic_type.vue?vue&type=script&lang=js&\"\nimport style0 from \"./cscp_dic_type.vue?vue&type=style&index=0&id=4e049424&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4e049424\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../css-loader/index.js??ref--10-oneOf-1-1!../../../vue-loader/lib/loaders/stylePostLoader.js!../../../postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./cscp_dic_type.vue?vue&type=style&index=0&id=4e049424&prod&lang=less&scoped=true&\""],"sourceRoot":""}